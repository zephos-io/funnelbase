syntax = "proto3";

package requester;

option go_package = "zephos/funnelbase/api";

message Headers {
  string key = 1;
  string value = 2;
}

service Funnelbase {
  rpc QueueRequest (Request) returns (Response) {}
  rpc AddRateLimit (RateLimit) returns (RateLimitResponse) {}
}

enum RequestMethod {
  GET = 0;
  POST = 1;
}

enum RequestPriority {
  LOW = 0;
  MEDIUM = 1;
  HIGH = 2;
}

message Request {

  string url = 1;
  RequestMethod method = 2;
  string authorization = 3;
  repeated Headers headers = 4;
  RequestPriority priority = 5;
  // time in milliseconds for the response to exist in cache assuming its successful
  // if no cacheLifespan is provided, it will not access any existing cache and it wont set any cache
  int64 cacheLifespan = 6;
  // name of the rate limit the request should be added to
  string rateLimit = 9;
}


message Response {
  int32 statusCode = 1;
  bool cacheHit = 2;
  string body = 3;
  repeated Headers headers = 4;

}

message RateLimit {
  string name = 1;
  // status code from the api to tell the client to backoff as its hitting rate limits
  int32 backoffStatusCode = 2; // 429
  // the header received from the api telling the client how long to wait before sending more requests
  string retryAfterHeader = 3; // Retry-After
  // time in milliseconds that the rate limit is based on
  int64 period = 4;
  // number of requests per limit that will be allowed through
  int32 limit = 5;
}

message RateLimitResponse {
  string response = 1;
}